<!DOCTYPE html>
<html>
<head>
<style>

	body {
		background-color: orange;
	}
	#gameboard {
	  height: 650px;
	  width: 650px;
	  background-color: black;
	  margin: 0px auto;
	  box-shadow: -0 17px 20px -3px #ff0000;
	}

	#gameboard > div {
	  background-image: url(http://i.imgur.com/7xPop6n.jpg);
	  border:#000 1px solid;
	  width:100px;
	  height:100px;
	  float:left;
	  margin:10px;
	  padding:20px;
	  font-size:64px;
	  cursor:pointer;
	  text-align:center;
	  text-shadow: 2px 2px #ff0000;
	}

	.button {
	  font-size: 40px;
	  color: yellow;
	  text-align: center;
	  background-color: green;
	  box-shadow: inset 0 0 7px 5px #ddd;
	  width: 200px;
	  position: relative;
	  margin: 0px auto;
	  margin-top: 20px;
	}

	.button:hover {
	  background-color: gray;
	}

	h1 {
	  font-size: 40px;
	  color: yellow;
	  position: relative;
	  text-align: center;
	  background-color: green;
	  width: 300px;
	  margin: 0px auto;
	}

	h1:hover {
	  background-color: black;
	}
</style>

</head>
	<body>
	<h1>MEMORY</h1>
		<div id="gameboard">
		</div>

		<div id="start" class="button">START</div>
	</body>
<script>
	var tiles = ["A", "A", "B", "B", "C", "C", "D", "D", "E", "E", "F", "F", "G", "G", "H", "H"];
	var memory_values = [];
	var memory_tile_ids = [];
	var tiles_flipped = 0;

	Array.prototype.memory_tile_shuffle = function(){
	    var i = this.length, j, temp;
	    while(--i > 0){
	        j = Math.floor(Math.random() * (i+1));
	        temp = this[j];
	        this[j] = this[i];
	        this[i] = temp;
	    }
	};

	function newBoard(){
		tiles_flipped = 0;
		var output = '';
	  tiles.memory_tile_shuffle();
		for(var i = 0; i < tiles.length; i++){
			output += '<div id="tile_'+i+'" onclick="memoryFlipTile(this,\''+tiles[i]+'\')"></div>';
		}
		document.getElementById('gameboard').innerHTML = output;
	  console.log(output);
	};

	var start = document.getElementById("start");

	start.onclick = function() {
	  start.style.backgroundColor = "orange";
	  newBoard();
	  alert("Starting New Game!");
	  console.log("Start Click Working");
	};
	                

	function memoryFlipTile(tile, val){
		if(tile.innerHTML === "" && memory_values.length < 2){
			tile.style.background = '#FFF';
			tile.innerHTML = val;
			if(memory_values.length === 0){
				memory_values.push(val);
				memory_tile_ids.push(tile.id);
	        } else if(memory_values.length === 1){
				memory_values.push(val);
				memory_tile_ids.push(tile.id);
				if(memory_values[0] === memory_values[1]){
					tiles_flipped += 2;
					// Clear both arrays
					memory_values = [];
	            	memory_tile_ids = [];
					// Check to see if the whole board is cleared
					if(tiles_flipped === tiles.length){
						alert("Board cleared... starting again");
						document.getElementById('gameboard').innerHTML = "";
						newBoard();
					}
        } else {
          function flip2Back(){
			    // Flip the 2 tiles back over
			    var tile_1 = document.getElementById(memory_tile_ids[0]);
			    var tile_2 = document.getElementById(memory_tile_ids[1]);
			    tile_1.style.background =
                    'url(http://i.imgur.com/7xPop6n.jpg)';
          	    tile_1.innerHTML = "";
			    tile_2.style.background = 'url(http://i.imgur.com/7xPop6n.jpg)';
          	    tile_2.innerHTML = "";
			    // Clear both arrays
			    memory_values = [];
          	    memory_tile_ids = [];
					}
					setTimeout(flip2Back, 700);
      	}
    	}
  	}
	}

	window.onload = function() {
	  alert("Welcome to Memory!! Click Start to Begin!!");
	  console.log("JS Working");
	};
</script>	
</html>